# Generated by Django 3.0.3 on 2020-02-26 19:44

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('name', models.CharField(max_length=254, null=True)),
                ('is_doctor', models.BooleanField(default=False, null=True)),
                ('is_patient', models.BooleanField(default=False, null=True)),
                ('address', models.CharField(max_length=200, null=True)),
                ('city', models.CharField(max_length=50, null=True)),
                ('pin', models.PositiveIntegerField(null=True)),
                ('state', models.CharField(max_length=25, null=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ExtendedDoctorsDetail',
            fields=[
                ('doctor', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='doctor_detail', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('specialization', models.CharField(choices=[('Dermatologists', 'Dermatologists'), ('Family Physicians', 'Family Physicians'), ('Gastroenterologists', 'Gastroenterologists')], max_length=50, null=True)),
                ('open_time', models.IntegerField(default=1, null=True, validators=[django.core.validators.MaxValueValidator(24), django.core.validators.MinValueValidator(1)])),
                ('close_time', models.IntegerField(default=2, null=True, validators=[django.core.validators.MaxValueValidator(24), django.core.validators.MinValueValidator(1)])),
                ('is_verified', models.BooleanField(blank=True, default=False)),
            ],
        ),
        migrations.CreateModel(
            name='ExtendedPatientsDetail',
            fields=[
                ('patient', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='patient_detail', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('age', models.IntegerField(default=0, null=True, validators=[django.core.validators.MaxValueValidator(120), django.core.validators.MinValueValidator(1)])),
            ],
        ),
    ]
